/*
 * This file is generated by jOOQ.
*/
package io.jedaev.lomonosov.model.tables;


import io.jedaev.lomonosov.model.Keys;
import io.jedaev.lomonosov.model.Public;
import io.jedaev.lomonosov.model.tables.records.SecuritiesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Securities extends TableImpl<SecuritiesRecord> {

    private static final long serialVersionUID = -1277624144;

    /**
     * The reference instance of <code>public.securities</code>
     */
    public static final Securities SECURITIES = new Securities();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecuritiesRecord> getRecordType() {
        return SecuritiesRecord.class;
    }

    /**
     * The column <code>public.securities.id</code>.
     */
    public final TableField<SecuritiesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('securities_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.securities.secid</code>.
     */
    public final TableField<SecuritiesRecord, String> SECID = createField("secid", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

    /**
     * The column <code>public.securities.name</code>.
     */
    public final TableField<SecuritiesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.securities.shortname</code>.
     */
    public final TableField<SecuritiesRecord, String> SHORTNAME = createField("shortname", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.securities.isin</code>.
     */
    public final TableField<SecuritiesRecord, String> ISIN = createField("isin", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.securities.regnumber</code>.
     */
    public final TableField<SecuritiesRecord, String> REGNUMBER = createField("regnumber", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.securities.issuesize</code>.
     */
    public final TableField<SecuritiesRecord, Integer> ISSUESIZE = createField("issuesize", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.securities</code> table reference
     */
    public Securities() {
        this("securities", null);
    }

    /**
     * Create an aliased <code>public.securities</code> table reference
     */
    public Securities(String alias) {
        this(alias, SECURITIES);
    }

    private Securities(String alias, Table<SecuritiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Securities(String alias, Table<SecuritiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SecuritiesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SECURITIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecuritiesRecord> getPrimaryKey() {
        return Keys.SECURITIES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecuritiesRecord>> getKeys() {
        return Arrays.<UniqueKey<SecuritiesRecord>>asList(Keys.SECURITIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Securities as(String alias) {
        return new Securities(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Securities rename(String name) {
        return new Securities(name, null);
    }
}
